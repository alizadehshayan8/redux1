{"version":3,"sources":["components/Song Ditail.js","components/SongList.js","actions/index.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","song","selectedSong","title","duration","SongList","renderList","props","songs","map","className","onClick","selectSong","this","React","Component","console","log","type","payload","App","combineReducers","action","reactDom","render","store","createStore","reducers","document","querySelector"],"mappings":"gKA0BeA,eAJS,SAAAC,GACpB,MAAO,CAACC,KAAOD,EAAME,gBAGVH,EAtBG,SAAC,GAAU,IAATE,EAAQ,EAARA,KAEhB,OAAKA,EAKD,gCACI,+CACA,wCACYA,EAAKE,MACb,uBAFJ,YAGcF,EAAKG,eAThB,mD,8BCATC,E,4MAEFC,WAAa,WAET,OAAO,EAAKC,MAAMC,MAAMC,KAAI,SAACR,GACzB,OACI,sBAAKS,UAAU,QAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,wBACAC,QAAS,kBAAI,EAAKJ,MAAMK,WAAWX,IACnCS,UAAU,oBAFV,sBAMJ,qBAAKA,UAAU,UAAf,SAA0BT,EAAKE,UARPF,EAAKE,W,4CAc7C,WAEI,OAAO,qBAAKO,UAAU,kBAAf,SAAmCG,KAAKP,mB,GAtBhCQ,IAAMC,WAiCdhB,eANS,SAACC,GAGrB,OAFDgB,QAAQC,IAAIjB,GAEJA,IAG6B,CACpCY,WCzCsB,SAACX,GACvB,MAAO,CACHiB,KAAM,gBACNC,QAASlB,KDqCFF,CAEZM,GEbYe,EArBH,WACR,OACI,qBAAKV,UAAU,oBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,MAGJ,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,Y,OCgBLW,cAAgB,CAC3Bb,MA9BiB,WACjB,MAAO,CACH,CACIL,MAAO,gBAAiBC,SAAU,QAEtC,CACID,MAAO,kBAAmBC,SAAU,QAExC,CACID,MAAO,iBAAkBC,SAAU,QAEvC,CACID,MAAO,eAAgBC,SAAU,UAmBzCF,aAZwB,WAAgC,IAA/BA,EAA8B,uDAAjB,KAAMoB,EAAW,uCAEvD,MAAoB,kBAAhBA,EAAOJ,KACAI,EAAOH,QAGXjB,KCZXqB,IAASC,OAEL,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SACI,cAAC,EAAD,MAKJC,SAASC,cAAc,Y","file":"static/js/main.861980e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst SongDitail =({song})=>{\r\n\r\n    if (!song){\r\n        return <div>Select a song</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Ditails for :</h3>\r\n            <p>\r\n                Title :{song.title}\r\n                <br/>\r\n                Duration:{song.duration}\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state =>{\r\n    return {song : state.selectedSong}\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongDitail)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSong } from \"../actions/index\";\r\n\r\n\r\n\r\n\r\nclass SongList extends React.Component {\r\n\r\n    renderList = () => {\r\n\r\n        return this.props.songs.map((song) => {\r\n            return (\r\n                <div className='item ' key={song.title}>\r\n                    <div className='right floated content'>\r\n                        <button \r\n                        onClick={()=>this.props.selectSong(song)}\r\n                        className='ui button primary'>\r\n                            Select\r\n                        </button>\r\n                    </div>\r\n                    <div className='content'>{song.title}</div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        return <div className='ui divided list' >{this.renderList()}</div>\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n   console.log(state)\r\n\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    selectSong\r\n})(SongList);","export const selectSong = (song) => {\r\n    return {\r\n        type: \"SONG_SELECTED\",\r\n        payload: song\r\n    };\r\n\r\n\r\n\r\n};\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport SongDitail from \"./Song Ditail\";\r\n\r\nimport SongList from \"./SongList\";\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='ui container grid'>\r\n            <div className='ui row '>\r\n                <div className='column eight wide'>\r\n                    <SongList />\r\n                </div>\r\n\r\n                <div className='column eight wide'>\r\n                    <SongDitail />\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>)\r\n\r\n};\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\n\r\n\r\n\r\nconst songsReducer = () => {\r\n    return [\r\n        {\r\n            title: \"Hello (Adele)\", duration: \"4:30\"\r\n        },\r\n        {\r\n            title: \"Ghasam (Sogand)\", duration: \"3:45\"\r\n        },\r\n        {\r\n            title: \"Didi (Mehrdad)\", duration: \"4:15\"\r\n        },\r\n        {\r\n            title: \"Neghab (Ali)\", duration: \"2:30\"\r\n        },\r\n\r\n    ];\r\n};\r\n\r\n\r\nconst selectedSongReducer = (selectedSong=null, action) => {\r\n\r\n    if (action.type === 'SONG_SELECTED') {\r\n        return action.payload\r\n    }\r\n\r\n    return selectedSong;\r\n};\r\n\r\n\r\nexport default combineReducers({\r\n    songs:songsReducer,\r\n    selectedSong:selectedSongReducer\r\n});","import React from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nreactDom.render(\r\n\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>\r\n\r\n    \r\n    ,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}